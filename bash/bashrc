if [ -f /etc/bashrc ]; then
    source /etc/bashrc
fi
if [ -f /etc/bash.bashrc ]; then
    source /etc/bash.bashrc
fi
if [ -f "${HOME}/.profile" ]; then
    source "${HOME}/.profile"
fi
alias eh="echo ¯\\\_\(ツ\)_/¯ | pbcopy"
alias ehh="eh"
alias .1='cd ..'
alias ..='cd ..'
alias .2='cd ../..'
alias ....='cd ../..'
alias .3='cd ../../..'
alias .4='cd ../../../..'
alias .5='cd ../../../../..'
alias l='ls -aF'
alias ll='ls -alF'

# list only hidden directories and files
alias l.='ls -dF .*'
alias ll.'=ls -ldF .*'
alias tmux='tmux -2'
if [[ $OSTYPE == darwin* ]]; then
    alias showFiles='defaults write com.apple.finder AppleShowAllFiles \
YES; killall Finder'
    alias hideFiles='defaults write com.apple.finder AppleShowAllFiles NO; \
killall Finder'
fi
alias sshid='ssh-add ~/.ssh/id_rsa'
alias ppass='PASSWORD_STORE_DIR=~/.password-store/personal/ pass'
alias pp='ppass'

# lingbib password store
alias lb-pass='PASSWORD_STORE_DIR=~/.password-store/shared-projects\
/lingbib/ pass'

# common logins
alias amazon='pp -c misc/amazon'
alias amex='pp -c finances/amex'
alias bb='pp -c misc/bitbucket'
alias chess='pp -c misc/chess'
alias dl='pp -c travel/delta'
alias fmail='pp -c email/fastmail/password'
alias kb='pp -c keybase/passphrase'
alias msufcu='pp -c finances/msufcu'
if type hub >/dev/null 2>&1; then
    alias git='hub'
fi
alias g='git status -sb'
alias gp='git pull'
alias gpr='git pull --rebase'
alias gpp='git pull --rebase && git push'
alias ga='git add'
alias gc='git commit'
alias gcn='git commit --no-edit'
alias gce='git commit -e'
alias gces='git commit -eS'
alias gca='git commit --amend'
alias gcah='git commit --amend -C HEAD'
alias gcv='git commit --no-verify'
alias gdv='git diff'
alias gdc='git diff --cached'
alias gl='git log --oneline --decorate --graph'
alias gla='git log --oneline --decorate --graph --all'
alias gt='git tag'
alias grc='git rebase --continue'
alias gsl='git stash list'
alias gss='git stash save'
if command -v kubectl 1>/dev/null 2>&1; then
    alias k='kubectl'
fi
if [ -d /usr/local/etc/bash_completion.d ]; then
    for f in /usr/local/etc/bash_completion.d/*; do
        . "${f}"
    done
fi
if [ -d /opt/homebrew/etc/bash_completion.d ]; then
    for f in /opt/homebrew/etc/bash_completion.d/*; do
        . "${f}"
    done
fi
if [ -f /usr/local/etc/bash_completion.d/pass ]; then
    source /usr/local/etc/bash_completion.d/pass
fi
# personal completion
_ppass(){
    PASSWORD_STORE_DIR=~/.password-store/personal/ _pass
}

complete -o filenames -o nospace -F _ppass ppass

_pp(){
    _ppass
}

complete -o filenames -o nospace -F _pp pp

# lingbib completion
_lb-pass(){
    PASSWORD_STORE_DIR=~/.password-store/shared-projects/lingbib/ _pass
}

complete -o filenames -o nospace -F _lb-pass lb-pass
if command -v pyenv 1>/dev/null 2>&1; then
    # Only needed if autcompletion isn't already in Hombrew bash completion dir
    #source <(kubectl completion bash)
    complete -o default -F __start_kubectl k
fi
eval "$(starship init bash)"
export CLICOLOR=1
export LSCOLORS=gxBxhxDxfxhxhxhxhxcxcx
eval "$(direnv hook bash)"
if command -v pyenv 1>/dev/null 2>&1; then
    eval "$(pyenv init -)"
fi

if command -v pyenv-virtualenv-init 1>/dev/null 2>&1; then
    eval "$(pyenv virtualenv-init -)"
fi

gpip2(){
    PIP_REQUIRE_VIRTUALENV="" pip2 "$@"
}

gpip3(){
    PIP_REQUIRE_VIRTUALENV="" pip3 "$@"
}

gpip(){
    PIP_REQUIRE_VIRTUALENV="" pip "$@"
}
if command -v rbenv 1>/dev/null 2>&1; then
    eval "$(rbenv init -)"
fi
