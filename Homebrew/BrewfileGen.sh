#!/usr/bin/env bash
# -*- mode: sh; fill-column: 72 -*-
#
#
########################################################################
## This is a bash script for generating a Brewfile for use with       ##
## Homebrew bundle. Rather than writing a single Brewfile, I chose    ##
## to generate it with a shell script from a list of software that I  ##
## use and a list of the dependencies for that software. This allows  ##
## me to:                                                             ##
##                                                                    ##
##   1. logically separate the software that I use from the           ##
##      dependencies for that software but still use the              ##
##      "brew bundle cleanup" function of Homebrew bundle. For more   ##
##      information see the top of the Brewfile or the Homebrew       ##
##      bundle repo;                                                  ##
##                                                                    ##
##   2. and do stuff that is OS specific by making use of the         ##
##      variables declared in the DetectOS shell script               ##
##                                                                    ##
##                                                                    ##
## (c) Adam Liter 2015 under Creative Commons                         ##
## Attribution-NonCommercial-ShareAlike 4.0 International License     ##
########################################################################
#
#
########################################################################
## TODO                                                               ##
##                                                                    ##
##   - At some point, it would be nice to turn this into a portable   ##
##     shell script so that it can be executed with /bin/sh           ##
##                                                                    ##
########################################################################
#
#


########################################################################
## This file is not intended for direct execution                     ##
########################################################################
if [ "${BASH_SOURCE[0]}" = "$0" ]; then
    echo "This file is not intended for direct execution..."
    echo "Exiting..."
    exit
fi

########################################################################
## .Brewfile location                                                 ##
########################################################################
BREWFILE_LOC="${HOME}/.Brewfile"

########################################################################
## Date manipulation                                                  ##
########################################################################
DATE=$(date)
SIXTY_SEVEN_LESS_DATE_CHARS=$((67-${#DATE}))
s=$(printf "%-${SIXTY_SEVEN_LESS_DATE_CHARS}s" " ")

########################################################################
## Initialize the .Brewfile                                           ##
########################################################################
echo "Generating a .Brewfile appropriate for the OS..."
cat << EOF > "${BREWFILE_LOC}"
# -*- mode: sh; fill-column: 72 -*-
#
########################################################################
## This file was generated by the script BrewfileGen.sh on           ###
## ${DATE}${s}##
########################################################################
#
#
########################################################################
## Dependencies for stuff that I use are included in this Brewfile    ##
## rather than allowing Homebrew|Linuxbrew to simply install them on  ##
## the fly because it is then possible to run "brew bundle cleanup"   ##
## which will uninstall everything that was installed with            ##
## Homebrew|Linuxbrew that is not listed in this file. That is, a     ##
## Brewfile can be used as a whitelist.                               ##
########################################################################
#
#


########################################################################
## Taps                                                               ##
########################################################################
### Even though this is already tapped, it's worth including here so
### that it's not untapped when running "brew bundle cleanup"
tap 'homebrew/bundle'
### Wait until they get their shit together
### See https://github.com/caskroom/homebrew-cask/issues/13201
#tap 'caskroom/cask'
tap 'homebrew/science'

########################################################################
## Software                                                           ##
########################################################################
EOF

########################################################################
## Get unique list of stuff to add to .Brewfile                       ##
########################################################################
### Get the dependencies
source ${HOME}/config-files/Homebrew/BrewfileDependencies.sh
### Get my software
source ${HOME}/config-files/Homebrew/BrewfileSoftware.sh
### Put them together
BREW_INSTALL=("${BREW_DEPS[@]}" "${BREW_SFTWR[@]}")
### Get a unique array
UNIQUE_BREW_INSTALL=($(printf "%s\n" "${BREW_INSTALL[@]}" | sort -u))
### Append them to the .Brewfile
for i in "${UNIQUE_BREW_INSTALL[@]}"; do
    if [ "${i}" = "emacs" ] && [ "${BASH_OS_TYPE}" = "MacOSX" ]; then
	## If on a Mac, then we can install Emacs with Cocoa
	echo "brew '${i}', args: ['with-cocoa']" >> "${BREWFILE_LOC}"
    else
	echo "brew '${i}'" >> "${BREWFILE_LOC}"
    fi
done
